#include <iostream>

#include <string>
using namespace std;

struct Animal {
    string gatunek;
    int weight;
    string name;


};
void ile(Animal *zbior, int animalsAmount, char pierwszaLitera) {
    int licznik = 0;
    for (int i = 0; i < animalsAmount; i++) {
        if (zbior[i].gatunek[0] == pierwszaLitera) {
            licznik++;
        }
    }
    cout << licznik << endl;
}


void ros(Animal *zbior, int animalsAmount, char pierwszaLitera) {
int start = 0;
    int count = 0;



    for (int i = 0; i < animalsAmount; i++) {
        if (zbior[i].gatunek[0] == pierwszaLitera) {

            count++;
        }
    }

    if (count == 0) {
        cout <<'-'<<'\n';
        return;
    }

    Animal* temp = new Animal[count];
    int idx = 0;
    for (int i = 0; i < animalsAmount; i++) {
        if (zbior[i].gatunek[0] == pierwszaLitera) {
            temp[idx++] = zbior[i];
        }
    }

    for (int i = 0; i < count - 1; i++) {
        for (int j = 0; j < count - i - 1; j++) {
            if (temp[j].weight > temp[j + 1].weight) {
                Animal t = temp[j];
                temp[j] = temp[j + 1];
                temp[j + 1] = t;
            }
        }
    }
    for (int i = 0; i < count; i++) {
        cout<< temp[i].name <<' ';
    }
    cout<<'\n';
    delete[] temp;
}
void mal(Animal *zbior, int animalsAmount, char pierwszaLitera) {


        int count = 0;
        for (int i = 0; i < animalsAmount; i++) {
            if (zbior[i].gatunek[0] == pierwszaLitera) {
                count++;
            }
        }

        if (count == 0) {
            cout <<'-'<<'\n';
            return;
        }


        Animal* temp = new Animal[count];
        int idx = 0;
        for (int i = 0; i < animalsAmount; i++) {
            if (zbior[i].gatunek[0] == pierwszaLitera) {
                temp[idx++] = zbior[i];
            }
        }


        for (int i = 0; i < count - 1; i++) {
            for (int j = 0; j < count - i - 1; j++) {
                if (temp[j].weight < temp[j + 1].weight) {
                    Animal t = temp[j];
                    temp[j] = temp[j + 1];
                    temp[j + 1] = t;
                }
            }
        }


        for (int i = 0; i < count; i++) {
            cout << temp[i].name << ' ';
        }
        cout<<'\n';
        delete[] temp;
    }


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    string animals[] ={"bizon","ara","nosorozec","hipopotam","szympans","gnu","paw","zebra"};

   int n;
    cin >> n;
    cin.ignore();

    Animal* zbiorGatunkow = new Animal[n];
    int animalsAmount = 0;



    for (int i = 0; i < n; i++) {
       string line;
        getline(cin, line);
    string words[3];

    int wordsAmount = 0;
    string actual;



    for (size_t j = 0; j<line.size(); j++) {
        if (line[j] == ' ') {
            if (!actual.empty()){
                words[wordsAmount++] = actual;
                actual = "";
            }
        }else {
            actual += line[j];
        }
    }
    if (!actual.empty()) {
        words[wordsAmount++] = actual;
    }

        if (wordsAmount == 3) {
            Animal animal;
            animal.gatunek = words[0];
            animal.weight = stoi(words[1]);
            animal.name = words[2];

            zbiorGatunkow[animalsAmount++] = animal;

        }

        else if (wordsAmount == 2) {
            string komenda = words[0];
            string gatunek = words[1];

            if (komenda[0] == 'i') {
                ile(zbiorGatunkow, animalsAmount, gatunek[0]);
                continue;
            }


            if (komenda[0] == 'r') {
                        ros(zbiorGatunkow, animalsAmount, gatunek[0]);
                        continue;
                    }
            if (komenda[0] == 'm') {
                mal(zbiorGatunkow, animalsAmount, gatunek[0]);
                continue;
            }

        }
    }

    delete[] zbiorGatunkow;


    return 0;
}
